params = initParams();

if strcmp( params.dataType, 'rgb')
    % extract deep CNN features from RGB data
    disp('Extracting CNN features for RGB data...');
    
    rgb_path = ['../features/rgb_features/' params.dataset '/' num2str(params.split) '/'];
    
    [rgbNetTrain, rgbNetTest] = extractCNNFeatures(params);
    %save([rgb_path 'rgbNetTrain.mat'], 'rgbNetTrain', '-v7.3');
    %save([rgb_path 'rgbNetTest.mat'], 'rgbNetTest', '-v7.3');
    
    rgbNetTrainLabels = rgbNetTrain.labels';
    rgbNetTestLabels = rgbNetTest.labels';
    
    save([rgb_path 'rgbNetTrainLabels.mat'], 'rgbNetTrainLabels', '-v7.3');
    save([rgb_path 'rgbNetTestLabels.mat'], 'rgbNetTestLabels', '-v7.3');
    
    % Layer-1
    fprintf('\nRGB CNN features are passing through RNNs for Pool-1 (5) layer ...\n');
    params.rfSize = 27;
    [rgbPool1RNNTrain, rgbPool1RNNTest] = forwardRNN(rgbNetTrain.pool1, rgbNetTest.pool1, params);
    rgbLayer1Acc = classify(rgbPool1RNNTrain, rgbNetTrainLabels, rgbPool1RNNTest, rgbNetTestLabels, params);
    
    % Layer-2
    fprintf('\nRGB CNN features are passing through RNNs for Pool-2 (9) layer ...\n');
    params.rfSize = 26;
    [rgbPool2RNNTrain, rgbPool2RNNTest] = forwardRNN(rgbNetTrain.pool2, rgbNetTest.pool2, params);
    rgbLayer2Acc = classify(rgbPool2RNNTrain, rgbNetTrainLabels, rgbPool2RNNTest, rgbNetTestLabels, params);
    
    % Layer-3
    fprintf('\nRGB CNN features are passing through RNNs for ReLU-3 (11) layer ...\n');
    [rgbRelu3RNNTrain, rgbRelu3RNNTest] = forwardRNN(rgbNetTrain.relu3, rgbNetTest.relu3, params);
    rgbLayer3Acc = classify(rgbRelu3RNNTrain, rgbNetTrainLabels, rgbRelu3RNNTest, rgbNetTestLabels, params);
    save([rgb_path 'rgbRelu3RNNTrain.mat'], 'rgbRelu3RNNTrain', '-v7.3');
    save([rgb_path 'rgbRelu3RNNTest.mat'], 'rgbRelu3RNNTest', '-v7.3');
    
    % Layer-4
    fprintf('\nRGB CNN features are passing through RNNs for ReLU-4 (13) layer ...\n');
    [rgbRelu4RNNTrain, rgbRelu4RNNTest] = forwardRNN(rgbNetTrain.relu4, rgbNetTest.relu4, params);
    rgbLayer4Acc = classify(rgbRelu4RNNTrain, rgbNetTrainLabels, rgbRelu4RNNTest, rgbNetTestLabels, params);
    save([rgb_path 'rgbRelu4RNNTrain.mat'], 'rgbRelu4RNNTrain', '-v7.3');
    save([rgb_path 'rgbRelu4RNNTest.mat'], 'rgbRelu4RNNTest', '-v7.3');
    
    % Layer-5
    fprintf('\nRGB CNN features are passing through RNNs for Pool-5 (16) layer ...\n');
    params.rfSize = 12;
    [rgbPool5RNNTrain, rgbPool5RNNTest] = forwardRNN(rgbNetTrain.pool5, rgbNetTest.pool5, params);
    rgbLayer5Acc = classify(rgbPool5RNNTrain, rgbNetTrainLabels, rgbPool5RNNTest, rgbNetTestLabels, params);
    save([rgb_path 'rgbPool5RNNTrain.mat'], 'rgbPool5RNNTrain', '-v7.3');
    save([rgb_path 'rgbPool5RNNTest.mat'], 'rgbPool5RNNTest', '-v7.3');
    
    % Layer-6
    fprintf('\nRGB CNN features are passing through RNNs for ReLU-6 (18) layer ...\n');
    params.rfSize = 8;
    [rgbRelu6RNNTrain, rgbRelu6RNNTest] = forwardRNN(rgbNetTrain.relu6, rgbNetTest.relu6, params);
    rgbLayer6Acc = classify(rgbRelu6RNNTrain, rgbNetTrainLabels, rgbRelu6RNNTest, rgbNetTestLabels, params);
    
    % Layer-7
    fprintf('\nRGB CNN features are passing through RNNs for ReLU-7 (20) layer ...\n');
    [rgbRelu7RNNTrain, rgbRelu7RNNTest] = forwardRNN(rgbNetTrain.relu7, rgbNetTest.relu7, params);
    rgbLayer7Acc = classify(rgbRelu7RNNTrain, rgbNetTrainLabels, rgbRelu7RNNTest, rgbNetTestLabels, params);
    
    clearvars rgbNetTrain rgbNetTest;
    
    % Combinations
    fprintf('\nClassification result of RGB (Layer-3 + Layer-4)...\n');
    rgbLayer34Acc = classify([rgbRelu3RNNTrain, rgbRelu4RNNTrain], rgbNetTrainLabels, [rgbRelu3RNNTest, rgbRelu4RNNTest], rgbNetTestLabels, params);
    
    fprintf('\nClassification result of RGB (Layer-3 + Layer-5)...\n');
    rgbLayer35Acc = classify([rgbRelu3RNNTrain, rgbPool5RNNTrain], rgbNetTrainLabels, [rgbRelu3RNNTest, rgbPool5RNNTest], rgbNetTestLabels, params);
    
    fprintf('\nClassification result of RGB (Layer-4 + Layer-5)...\n');
    rgbLayer45Acc = classify([rgbRelu4RNNTrain, rgbPool5RNNTrain], rgbNetTrainLabels, [rgbRelu4RNNTest, rgbPool5RNNTest], rgbNetTestLabels, params);
    
    %---
    fprintf('\nClassification result of RGB (Layer-3 + Layer-4 + Layer-5)...\n');
    rgbLayer345Acc = classify([rgbRelu3RNNTrain, rgbRelu4RNNTrain, rgbPool5RNNTrain], rgbNetTrainLabels, [rgbRelu3RNNTest, rgbRelu4RNNTest, rgbPool5RNNTest], rgbNetTestLabels, params);
    
elseif strcmp( params.dataType, 'depth')
    % extract deep CNN features from surface normals
    disp('Extracting CNN features for surface normals of depth images...');
    depth_path = ['../features/depth_features/' params.dataset '/' num2str(params.split) '/'];
    
    [surfNormNetTrain, surfNormNetTest] = extractCNNFeatures(params);
    %save([depth_features 'surfNormNetTrain.mat'], 'surfNormNetTrain', '-v7.3'); %commented
    %save([depth_features 'surfNormNetTest.mat'], 'surfNormNetTest', '-v7.3'); %commented Error using save
    
    surfNormNetTrainLabels = surfNormNetTrain.labels';
    surfNormNetTestLabels = surfNormNetTest.labels';
    
    save([depth_path 'surfNormNetTrainLabels.mat'], 'surfNormNetTrainLabels', '-v7.3');
    save([depth_path 'surfNormNetTestLabels.mat'], 'surfNormNetTestLabels', '-v7.3');
    
    % Layer-1
    fprintf('\nSurfNorm CNN features are passing through RNNs for Pool-1 (5) layer ...\n');
    params.rfSize = 27;
    [surfNormPool1RNNTrain, surfNormPool1RNNTest] = forwardRNN(surfNormNetTrain.pool1, surfNormNetTest.pool1, params);
    surfNormLayer1Acc = classify(surfNormPool1RNNTrain, surfNormNetTrainLabels, surfNormPool1RNNTest, surfNormNetTestLabels, params);
    
    % Layer-2
    fprintf('\nSurfNorm CNN features are passing through RNNs for Pool-2 (9) layer ...\n');
    params.rfSize = 26;
    [surfNormPool2RNNTrain, surfNormPool2RNNTest] = forwardRNN(surfNormNetTrain.pool2, surfNormNetTest.pool2, params);
    surfNormLayer2Acc = classify(surfNormPool2RNNTrain, surfNormNetTrainLabels, surfNormPool2RNNTest, surfNormNetTestLabels, params);
    
    % Layer-3
    fprintf('\nSurfNorm CNN features are passing through RNNs for ReLU-3 (11) layer ...\n');
    [surfNormRelu3RNNTrain, surfNormRelu3RNNTest] = forwardRNN(surfNormNetTrain.relu3, surfNormNetTest.relu3, params);
    surfNormLayer3Acc = classify(surfNormRelu3RNNTrain, surfNormNetTrainLabels, surfNormRelu3RNNTest, surfNormNetTestLabels, params);
    save([depth_path 'surfNormRelu3RNNTrain.mat'], 'surfNormRelu3RNNTrain', '-v7.3');
    save([depth_path 'surfNormRelu3RNNTest.mat'], 'surfNormRelu3RNNTest', '-v7.3');
    
    % Layer-4
    fprintf('\nSurfNorm CNN features are passing through RNNs for ReLU-4 (13) layer ...\n');
    [surfNormRelu4RNNTrain, surfNormRelu4RNNTest] = forwardRNN(surfNormNetTrain.relu4, surfNormNetTest.relu4, params);
    surfNormLayer4Acc = classify(surfNormRelu4RNNTrain, surfNormNetTrainLabels, surfNormRelu4RNNTest, surfNormNetTestLabels, params);
    save([depth_path 'surfNormRelu4RNNTrain.mat'], 'surfNormRelu4RNNTrain', '-v7.3');
    save([depth_path 'surfNormRelu4RNNTest.mat'], 'surfNormRelu4RNNTest', '-v7.3');
    
    % Layer-5
    fprintf('\nSurfNorm CNN features are passing through RNNs for Pool-5 (16) layer ...\n');
    params.rfSize = 12;
    [surfNormPool5RNNTrain, surfNormPool5RNNTest] = forwardRNN(surfNormNetTrain.pool5, surfNormNetTest.pool5, params);
    surfNormLayer5Acc = classify(surfNormPool5RNNTrain, surfNormNetTrainLabels, surfNormPool5RNNTest, surfNormNetTestLabels, params);
    save([depth_path 'surfNormPool5RNNTrain.mat'], 'surfNormPool5RNNTrain', '-v7.3');
    save([depth_path 'surfNormPool5RNNTest.mat'], 'surfNormPool5RNNTest', '-v7.3');
    
    % Layer-6
    fprintf('\nsurfNorm CNN features are passing through RNNs for ReLU-6 (18) layer ...\n');
    params.rfSize = 8;
    [surfNormRelu6RNNTrain, surfNormRelu6RNNTest] = forwardRNN(surfNormNetTrain.relu6, surfNormNetTest.relu6, params);
    surfNormLayer6Acc = classify(surfNormRelu6RNNTrain, surfNormNetTrainLabels, surfNormRelu6RNNTest, surfNormNetTestLabels, params);
    
    % Layer-7
    fprintf('\nsurfNorm CNN features are passing through RNNs for ReLU-7 (20) layer ...\n');
    [surfNormRelu7RNNTrain, surfNormRelu7RNNTest] = forwardRNN(surfNormNetTrain.relu7, surfNormNetTest.relu7, params);
    surfNormLayer7Acc = classify(surfNormRelu7RNNTrain, surfNormNetTrainLabels, surfNormRelu7RNNTest, surfNormNetTestLabels, params);
    
    clearvars surfNormNetTrain surfNormNetTest;
    
    % Combinations
    fprintf('\nClassification result of Depth (Layer-3 + Layer-4)...\n');
    surfNormLayer34Acc = classify([surfNormRelu3RNNTrain, surfNormRelu4RNNTrain], surfNormNetTrainLabels, [surfNormRelu3RNNTest, surfNormRelu4RNNTest], surfNormNetTestLabels, params);
    
    fprintf('\nClassification result of Depth (Layer-3 + Layer-5)...\n');
    surfNormLayer35Acc = classify([surfNormRelu3RNNTrain, surfNormPool5RNNTrain], surfNormNetTrainLabels, [surfNormRelu3RNNTest, surfNormPool5RNNTest], surfNormNetTestLabels, params);
    
    fprintf('\nClassification result of Depth (Layer-4 + Layer-5)...\n');
    surfNormLayer45Acc = classify([surfNormRelu4RNNTrain, surfNormPool5RNNTrain], surfNormNetTrainLabels, [surfNormRelu4RNNTest, surfNormPool5RNNTest], surfNormNetTestLabels, params);
    
    fprintf('\nClassification result of Depth (Layer-3 + Layer-4 + Layer-5)...\n');
    surfNormLayer345Acc = classify([surfNormRelu3RNNTrain, surfNormRelu4RNNTrain, surfNormPool5RNNTrain], surfNormNetTrainLabels, [surfNormRelu3RNNTest, surfNormRelu4RNNTest, surfNormPool5RNNTest], surfNormNetTestLabels, params);
    
else % rgbd
    disp('Loading RGB features...');
    rgb_path = ['../features/rgb_features/' params.dataset '/' num2str(params.split) '/'];
    
    load([rgb_path 'rgbNetTrainLabels.mat']);
    load([rgb_path 'rgbNetTestLabels.mat']);
    
    disp('Loading Layer-4 features...');
    load([rgb_path 'rgbRelu4RNNTrain.mat']);
    load([rgb_path 'rgbRelu4RNNTest.mat']);
    
    disp('Loading Layer-5 features...');
    load([rgb_path 'rgbPool5RNNTrain.mat']);
    load([rgb_path 'rgbPool5RNNTest.mat']);
    
    disp('Loading depth features...');
    depth_path = ['../features/depth_features/' params.dataset '/' num2str(params.split) '/'];
    
    disp('Loading Layer-4 features...');
    load([depth_path 'surfNormRelu4RNNTrain.mat']);
    load([depth_path 'surfNormRelu4RNNTest.mat']);
    
    disp('Loading Layer-5 features...');
    load([depth_path 'surfNormPool5RNNTrain.mat']);
    load([depth_path 'surfNormPool5RNNTest.mat']);
    
    fprintf('\nClassification result of RGBD: RGB(Layer-4) + Depth(Layer-5)...\n');
    rgb4depth5Acc = classify([rgbRelu4RNNTrain, surfNormPool5RNNTrain], rgbNetTrainLabels, [rgbRelu4RNNTest, surfNormPool5RNNTest], rgbNetTestLabels, params);
    
    fprintf('\nClassification result of RGBD: RGB(Layer-4 + Layer-5) + Depth(Layer-4 + Layer-5)...\n');
    rgbd45Acc = classify([rgbRelu4RNNTrain, rgbPool5RNNTrain, surfNormRelu4RNNTrain, surfNormPool5RNNTrain], rgbNetTrainLabels, [rgbRelu4RNNTest, rgbPool5RNNTest, surfNormRelu4RNNTest, surfNormPool5RNNTest], rgbNetTestLabels, params);
    
end

